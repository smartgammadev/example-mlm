imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "en" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        { engines: ['twig'], assets_version: v6 }
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true
    esi: { enabled: true }

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'SonataCoreBundle:Form:datepicker.html.twig'

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
    
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:            
            default:                
                auto_mapping: true
                mappings:
                    ApplicationSonataMediaBundle: ~
                    ApplicationSonataNotificationBundle: ~
                    ApplicationSonataUserBundle: ~
                    SonataMediaBundle: ~                    
                    SonataNotificationBundle: ~                    
                    SonataUserBundle: ~
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree # this one is optional and will default to the name set for the mapping
                        is_bundle: false                    
stof_doctrine_extensions:
    default_locale: "%locale%"
    orm:
        default:
            tree: true

#sonata_doctrine_orm_admin:
#    templates:
#        form: [ SuccessEventBundle:Admin:form_admin_fields.html.twig ]

sonata_admin:
    title: 4 Success
    templates:
        layout:  ::standard_layout.html.twig
#    options:
#        form_type: horizontal
    dashboard:
        blocks:
            - { position: bottom, type: sonata.block.service.treeview, class: col-md-12 }
            - { position: top, type: sonata.admin.block.admin_list, class: col-md-12 }            
        groups:
            4 Success:
                items: 
                    - sonata.admin.webinar_event
                    - sonata.admin.webinar_signup                    
                    - sonata.admin.external_placeholder                    
                    - sonata.admin.setting_admin
                    - sonata.admin.pricing_admin
            Users:
                items:
                    - sonata.user.admin.user
                    - sonata.user.admin.group
            Sales Generator:
                items:
                    - sonata.admin.audience
                    - sonata.admin.question
#                    - sonata.admin.answer
        
sonata_notification:
    backend: sonata.notification.backend.runtime
    admin:
        enabled: false

#sonata_intl:
#    timezone:
#        default: Europe/Moscow

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.treeview:
        # Your other blocks        
        
sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb
    
fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User

    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)
    service:
        user_manager: sonata.user.orm.user_manager

sonata_media:
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
#                - sonata.media.provider.dailymotion
#                - sonata.media.provider.youtube
                - sonata.media.provider.image
#                - sonata.media.provider.file
#
            formats:
                preview:   { width: 100, quality: 100}
                small:     { width: 180, quality: 100}
                large:     { width: 380, quality: 100}            

        webinar_image:
            providers:
                - sonata.media.provider.image
            formats:
                preview:   { width: 100, quality: 100}
                small:     { width: 180, quality: 100}
                large:     { width: 380, quality: 100}            

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false
            
ornicar_apc:
    host: %domain%
    web_dir: %kernel.root_dir%/../web
    
fos_js_routing:
    routes_to_expose: [ ^((?!_admin_).)*$ ]
    
snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: redis://localhost
            logging: %kernel.debug%
        token:
            type: predis
            alias: token
            dsn: redis://localhost/1
            
        session:
            type: predis
            alias: session
            dsn: redis://localhost/2            
    session:
        client: session
        prefix: success
        ttl: 1200